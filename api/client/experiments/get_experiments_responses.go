// Code generated by go-swagger; DO NOT EDIT.

package experiments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	lswagger "github.infra.cloudera.com/CAI/AmpRagMonitoring/pkg/swagger"

	strfmt "github.com/go-openapi/strfmt"

	"github.infra.cloudera.com/CAI/AmpRagMonitoring/models"
)

// GetExperimentsReader is a Reader for the GetExperiments structure.
type GetExperimentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExperimentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExperimentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExperimentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetExperimentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetExperimentsOK creates a GetExperimentsOK with default headers values
func NewGetExperimentsOK() *GetExperimentsOK {
	return &GetExperimentsOK{}
}

/*
GetExperimentsOK handles this case with default header values.

success
*/
type GetExperimentsOK struct {
	Payload []*models.Experiment
}

// Code gets the status code for the get experiments o k response
func (o *GetExperimentsOK) Code() int {
	return 200
}

func (o *GetExperimentsOK) Error() string {
	return fmt.Sprintf("[GET /experiments][%d] getExperimentsOK  %+v", 200, o.Payload)
}

func (o *GetExperimentsOK) GetPayload() []*models.Experiment {
	return o.Payload
}

func (o *GetExperimentsOK) GetSerializedPayload() ([]byte, error) {
	return json.Marshal(o.Payload)
}

var _ lswagger.SwaggerResponse = &GetExperimentsOK{}

func (o *GetExperimentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExperimentsBadRequest creates a GetExperimentsBadRequest with default headers values
func NewGetExperimentsBadRequest() *GetExperimentsBadRequest {
	return &GetExperimentsBadRequest{}
}

/*
GetExperimentsBadRequest handles this case with default header values.

bad request
*/
type GetExperimentsBadRequest struct {
}

// Code gets the status code for the get experiments bad request response
func (o *GetExperimentsBadRequest) Code() int {
	return 400
}

func (o *GetExperimentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /experiments][%d] getExperimentsBadRequest ", 400)
}

func (o *GetExperimentsBadRequest) GetSerializedPayload() ([]byte, error) {
	return nil, nil
}

var _ lswagger.SwaggerResponse = &GetExperimentsBadRequest{}

func (o *GetExperimentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExperimentsInternalServerError creates a GetExperimentsInternalServerError with default headers values
func NewGetExperimentsInternalServerError() *GetExperimentsInternalServerError {
	return &GetExperimentsInternalServerError{}
}

/*
GetExperimentsInternalServerError handles this case with default header values.

internal service error
*/
type GetExperimentsInternalServerError struct {
}

// Code gets the status code for the get experiments internal server error response
func (o *GetExperimentsInternalServerError) Code() int {
	return 500
}

func (o *GetExperimentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /experiments][%d] getExperimentsInternalServerError ", 500)
}

func (o *GetExperimentsInternalServerError) GetSerializedPayload() ([]byte, error) {
	return nil, nil
}

var _ lswagger.SwaggerResponse = &GetExperimentsInternalServerError{}

func (o *GetExperimentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
