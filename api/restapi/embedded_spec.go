// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for creating and fetching metrics",
    "title": "Metrics",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "paths": {
    "/experiments": {
      "get": {
        "description": "Fetch the list of monitored experiments",
        "tags": [
          "experiments"
        ],
        "summary": "Fetch the list of monitored experiments.",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics": {
      "post": {
        "description": "Create monitoring metrics",
        "tags": [
          "metrics"
        ],
        "summary": "Create metrics.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Metrics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics/list": {
      "post": {
        "description": "List monitoring metrics",
        "tags": [
          "metrics"
        ],
        "summary": "List metrics.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MetricListFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Metric"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics/names": {
      "get": {
        "description": "List monitoring metric names for an experiment",
        "tags": [
          "metrics"
        ],
        "summary": "List metric names for an experiment.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs": {
      "post": {
        "description": "Register an experiment run for monitoring",
        "tags": [
          "runs"
        ],
        "summary": "Register an experiment run for monitoring.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      },
      "delete": {
        "description": "Delete an experiment run from monitoring.",
        "tags": [
          "runs"
        ],
        "summary": "Delete an experiment run from monitoring.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The ID of the run",
            "name": "run_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs/list": {
      "post": {
        "description": "Get a list monitored experiment runs for an experiment.",
        "tags": [
          "runs"
        ],
        "summary": "Get a list of monitored experiment runs for an experiment.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExperimentRunListFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExperimentRun"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs/parameters": {
      "get": {
        "description": "Get a list of monitored experiment run parameters.",
        "tags": [
          "runs"
        ],
        "summary": "Get a list of monitored experiment run parameters.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The ID of the run",
            "name": "run_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExperimentRunParameter"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    }
  },
  "definitions": {
    "Experiment": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        }
      }
    },
    "ExperimentRun": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "experiment_run_id": {
          "description": "The Experiment Run ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        }
      }
    },
    "ExperimentRunListFilter": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID to filter on",
          "type": "string"
        }
      }
    },
    "ExperimentRunParameter": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The name of the parameter",
          "type": "string"
        },
        "value": {
          "description": "The value of the parameter",
          "type": "string"
        }
      }
    },
    "Metric": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "experiment_run_id": {
          "description": "The Experiment Run ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        },
        "name": {
          "description": "The name of the metric",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the metric",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricTag"
          }
        },
        "ts": {
          "description": "The timestamp of the metric",
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "description": "The value of the metric",
          "type": "object",
          "$ref": "#/definitions/MetricValue"
        }
      }
    },
    "MetricListFilter": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID to filter on",
          "type": "string"
        },
        "metric_names": {
          "description": "The metric names to filter on",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "run_ids": {
          "description": "The Experiment Run IDs to filter on",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricTag": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The name of the tag",
          "type": "string"
        },
        "value": {
          "description": "The value of the tag",
          "type": "string"
        }
      }
    },
    "MetricValue": {
      "type": "object",
      "properties": {
        "metricType": {
          "type": "string"
        },
        "numericValue": {
          "type": "number"
        },
        "stringValue": {
          "type": "string"
        }
      }
    },
    "Metrics": {
      "type": "object",
      "properties": {
        "metrics": {
          "description": "The metrics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "APIs for Experiments and Runs",
      "name": "runs"
    },
    {
      "description": "APIs for Metrics",
      "name": "metrics"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for creating and fetching metrics",
    "title": "Metrics",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "paths": {
    "/experiments": {
      "get": {
        "description": "Fetch the list of monitored experiments",
        "tags": [
          "experiments"
        ],
        "summary": "Fetch the list of monitored experiments.",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics": {
      "post": {
        "description": "Create monitoring metrics",
        "tags": [
          "metrics"
        ],
        "summary": "Create metrics.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Metrics"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics/list": {
      "post": {
        "description": "List monitoring metrics",
        "tags": [
          "metrics"
        ],
        "summary": "List metrics.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MetricListFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Metric"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/metrics/names": {
      "get": {
        "description": "List monitoring metric names for an experiment",
        "tags": [
          "metrics"
        ],
        "summary": "List metric names for an experiment.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs": {
      "post": {
        "description": "Register an experiment run for monitoring",
        "tags": [
          "runs"
        ],
        "summary": "Register an experiment run for monitoring.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ExperimentRun"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      },
      "delete": {
        "description": "Delete an experiment run from monitoring.",
        "tags": [
          "runs"
        ],
        "summary": "Delete an experiment run from monitoring.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The ID of the run",
            "name": "run_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs/list": {
      "post": {
        "description": "Get a list monitored experiment runs for an experiment.",
        "tags": [
          "runs"
        ],
        "summary": "Get a list of monitored experiment runs for an experiment.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExperimentRunListFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExperimentRun"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    },
    "/runs/parameters": {
      "get": {
        "description": "Get a list of monitored experiment run parameters.",
        "tags": [
          "runs"
        ],
        "summary": "Get a list of monitored experiment run parameters.",
        "parameters": [
          {
            "type": "string",
            "description": "The ID of the experiment",
            "name": "experiment_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The ID of the run",
            "name": "run_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExperimentRunParameter"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal service error"
          }
        }
      }
    }
  },
  "definitions": {
    "Experiment": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        }
      }
    },
    "ExperimentRun": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "experiment_run_id": {
          "description": "The Experiment Run ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        }
      }
    },
    "ExperimentRunListFilter": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID to filter on",
          "type": "string"
        }
      }
    },
    "ExperimentRunParameter": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The name of the parameter",
          "type": "string"
        },
        "value": {
          "description": "The value of the parameter",
          "type": "string"
        }
      }
    },
    "Metric": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID",
          "type": "string"
        },
        "experiment_run_id": {
          "description": "The Experiment Run ID",
          "type": "string"
        },
        "id": {
          "description": "The ID",
          "type": "integer"
        },
        "name": {
          "description": "The name of the metric",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the metric",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricTag"
          }
        },
        "ts": {
          "description": "The timestamp of the metric",
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "description": "The value of the metric",
          "type": "object",
          "$ref": "#/definitions/MetricValue"
        }
      }
    },
    "MetricListFilter": {
      "type": "object",
      "properties": {
        "experiment_id": {
          "description": "The Experiment ID to filter on",
          "type": "string"
        },
        "metric_names": {
          "description": "The metric names to filter on",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "run_ids": {
          "description": "The Experiment Run IDs to filter on",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MetricTag": {
      "type": "object",
      "properties": {
        "key": {
          "description": "The name of the tag",
          "type": "string"
        },
        "value": {
          "description": "The value of the tag",
          "type": "string"
        }
      }
    },
    "MetricValue": {
      "type": "object",
      "properties": {
        "metricType": {
          "type": "string"
        },
        "numericValue": {
          "type": "number"
        },
        "stringValue": {
          "type": "string"
        }
      }
    },
    "Metrics": {
      "type": "object",
      "properties": {
        "metrics": {
          "description": "The metrics",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "APIs for Experiments and Runs",
      "name": "runs"
    },
    {
      "description": "APIs for Metrics",
      "name": "metrics"
    }
  ]
}`))
}
